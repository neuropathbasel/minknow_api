# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: minknow_api/acquisition.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from minknow_api import rpc_options_pb2 as minknow__api_dot_rpc__options__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='minknow_api/acquisition.proto',
  package='minknow_api.acquisition',
  syntax='proto3',
  serialized_options=_b('\n\034com.nanoporetech.minknow_api\242\002\005MKAPI'),
  serialized_pb=_b('\n\x1dminknow_api/acquisition.proto\x12\x17minknow_api.acquisition\x1a\x1dminknow_api/rpc_options.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xd3\x03\n\x0cStartRequest\x12\"\n\x1a\x64ont_wait_for_device_ready\x18\x02 \x01(\x08\x12\x38\n\x0fgenerate_report\x18\x03 \x01(\x0e\x32\x1f.minknow_api.acquisition.Option\x12\x45\n\x1csend_sequencing_read_metrics\x18\x04 \x01(\x0e\x32\x1f.minknow_api.acquisition.Option\x12\x41\n\x18send_basecalling_metrics\x18\x05 \x01(\x0e\x32\x1f.minknow_api.acquisition.Option\x12\x31\n\x07purpose\x18\x06 \x01(\x0e\x32 .minknow_api.acquisition.Purpose\x12\x31\n\x08\x61nalysis\x18\x07 \x01(\x0e\x32\x1f.minknow_api.acquisition.Option\x12\x34\n\x0b\x66ile_output\x18\x08 \x01(\x0e\x32\x1f.minknow_api.acquisition.Option\x12?\n\x16generate_final_summary\x18\t \x01(\x0e\x32\x1f.minknow_api.acquisition.Option\"\x1f\n\rStartResponse\x12\x0e\n\x06run_id\x18\x01 \x01(\t\"\xe0\x01\n\x0bStopRequest\x12L\n\x13\x64\x61ta_action_on_stop\x18\x01 \x01(\x0e\x32/.minknow_api.acquisition.StopRequest.DataAction\x12\x18\n\x10wait_until_ready\x18\x02 \x01(\x08\x12\x15\n\rkeep_power_on\x18\x03 \x01(\x08\"R\n\nDataAction\x12\x10\n\x0cSTOP_DEFAULT\x10\x00\x12\x16\n\x12STOP_KEEP_ALL_DATA\x10\x01\x12\x1a\n\x16STOP_FINISH_PROCESSING\x10\x02\"\x0e\n\x0cStopResponse\"+\n\x1bWatchForStatusChangeRequest\x12\x0c\n\x04stop\x18\x01 \x01(\x08\"V\n\x1cWatchForStatusChangeResponse\x12\x36\n\x06status\x18\x01 \x01(\x0e\x32&.minknow_api.acquisition.MinknowStatus\"\x16\n\x14\x43urrentStatusRequest\"O\n\x15\x43urrentStatusResponse\x12\x36\n\x06status\x18\x01 \x01(\x0e\x32&.minknow_api.acquisition.MinknowStatus\"\x14\n\x12GetProgressRequest\"\xa0\x01\n\x13GetProgressResponse\x12S\n\x0fraw_per_channel\x18\x01 \x01(\x0b\x32:.minknow_api.acquisition.GetProgressResponse.RawPerChannel\x1a\x34\n\rRawPerChannel\x12\x10\n\x08\x61\x63quired\x18\x01 \x01(\x04\x12\x11\n\tprocessed\x18\x02 \x01(\x04\".\n\x1cGetAcquisitionRunInfoRequest\x12\x0e\n\x06run_id\x18\x01 \x01(\t\"\xc3\x03\n\x17\x41\x63quisitionYieldSummary\x12\x12\n\nread_count\x18\x01 \x01(\x03\x12\"\n\x1a\x62\x61secalled_pass_read_count\x18\x03 \x01(\x03\x12\"\n\x1a\x62\x61secalled_fail_read_count\x18\x04 \x01(\x03\x12%\n\x1d\x62\x61secalled_skipped_read_count\x18\n \x01(\x03\x12\x1d\n\x15\x62\x61secalled_pass_bases\x18\x05 \x01(\x03\x12\x1d\n\x15\x62\x61secalled_fail_bases\x18\x12 \x01(\x03\x12\x1a\n\x12\x62\x61secalled_samples\x18\x06 \x01(\x03\x12\x1c\n\x14selected_raw_samples\x18\x07 \x01(\x03\x12\x17\n\x0fselected_events\x18\x08 \x01(\x03\x12 \n\x18\x65stimated_selected_bases\x18\t \x01(\x03\x12\x19\n\x11\x61lignment_matches\x18\x0e \x01(\x03\x12\x1c\n\x14\x61lignment_mismatches\x18\x0f \x01(\x03\x12\x1c\n\x14\x61lignment_insertions\x18\x10 \x01(\x03\x12\x1b\n\x13\x61lignment_deletions\x18\x11 \x01(\x03\"\x98\x01\n\x18\x41\x63quisitionWriterSummary\x12\x1a\n\x12written_read_count\x18\x01 \x01(\x03\x12\x1f\n\x17\x62ytes_to_write_produced\x18\x02 \x01(\x03\x12\x1d\n\x15\x62ytes_to_write_failed\x18\x03 \x01(\x03\x12 \n\x18\x62ytes_to_write_completed\x18\x04 \x01(\x03\"\xb0\x03\n\x10\x43hannelStateInfo\x12?\n\x06groups\x18\x01 \x03(\x0b\x32/.minknow_api.acquisition.ChannelStateInfo.Group\x1a;\n\x05Style\x12\r\n\x05label\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x0e\n\x06\x63olour\x18\x03 \x01(\t\x1a~\n\x0c\x43hannelState\x12\n\n\x02id\x18\x01 \x01(\r\x12\x0c\n\x04name\x18\x02 \x01(\t\x12>\n\x05style\x18\x03 \x01(\x0b\x32/.minknow_api.acquisition.ChannelStateInfo.Style\x12\x14\n\x0cglobal_order\x18\x04 \x01(\r\x1a\x9d\x01\n\x05Group\x12\x0c\n\x04name\x18\x01 \x01(\t\x12>\n\x05style\x18\x02 \x01(\x0b\x32/.minknow_api.acquisition.ChannelStateInfo.Style\x12\x46\n\x06states\x18\x03 \x03(\x0b\x32\x36.minknow_api.acquisition.ChannelStateInfo.ChannelState\"\xde\x03\n\x18\x41\x63quisitionConfigSummary\x12\x1b\n\x13\x62\x61secalling_enabled\x18\x01 \x01(\x08\x12\x19\n\x11\x62\x61rcoding_enabled\x18\r \x01(\x08\x12\x19\n\x11\x61lignment_enabled\x18\x0e \x01(\x08\x12\x14\n\x0clamp_enabled\x18\x0f \x01(\x08\x12\x17\n\x0freads_directory\x18\x02 \x01(\t\x12\"\n\x1areads_fallback_directories\x18\x03 \x03(\t\x12\x1b\n\x13\x66\x61st5_reads_enabled\x18\x04 \x01(\x08\x12\x1b\n\x13\x66\x61stq_reads_enabled\x18\x05 \x01(\x08\x12\x1e\n\x16protobuf_reads_enabled\x18\x06 \x01(\x08\x12\x16\n\x0e\x62ulk_file_path\x18\x07 \x01(\t\x12\x19\n\x11\x62ulk_file_enabled\x18\x08 \x01(\x08\x12\x45\n\x12\x63hannel_state_info\x18\t \x01(\x0b\x32).minknow_api.acquisition.ChannelStateInfo\x12\x1c\n\x14\x65vents_to_base_ratio\x18\n \x01(\x02\x12\x13\n\x0bsample_rate\x18\x0b \x01(\r\x12\x15\n\rchannel_count\x18\x0c \x01(\r\"\x94\x05\n\x12\x41\x63quisitionRunInfo\x12\x0e\n\x06run_id\x18\x01 \x01(\t\x12\x38\n\x05state\x18\x02 \x01(\x0e\x32).minknow_api.acquisition.AcquisitionState\x12@\n\x0f\x66inishing_state\x18\n \x01(\x0e\x32\'.minknow_api.acquisition.FinishingState\x12\x43\n\x0bstop_reason\x18\x03 \x01(\x0e\x32..minknow_api.acquisition.AcquisitionStopReason\x12.\n\nstart_time\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x38\n\x14\x64\x61ta_read_start_time\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x36\n\x12\x64\x61ta_read_end_time\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12,\n\x08\x65nd_time\x18\x07 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12G\n\ryield_summary\x18\x08 \x01(\x0b\x32\x30.minknow_api.acquisition.AcquisitionYieldSummary\x12I\n\x0e\x63onfig_summary\x18\t \x01(\x0b\x32\x31.minknow_api.acquisition.AcquisitionConfigSummary\x12I\n\x0ewriter_summary\x18\x0b \x01(\x0b\x32\x31.minknow_api.acquisition.AcquisitionWriterSummary\"\x1c\n\x1aListAcquisitionRunsRequest\".\n\x1bListAcquisitionRunsResponse\x12\x0f\n\x07run_ids\x18\x01 \x03(\t\"!\n\x1fGetCurrentAcquisitionRunRequest\"#\n!WatchCurrentAcquisitionRunRequest\"\xdf\x02\n\x16SetSignalReaderRequest\x12V\n\x06reader\x18\x01 \x01(\x0e\x32@.minknow_api.acquisition.SetSignalReaderRequest.SignalReaderTypeB\x04\x88\xb5\x18\x01\x12\x12\n\nhdf_source\x18\x02 \x01(\t\x12P\n\x08hdf_mode\x18\x03 \x01(\x0e\x32>.minknow_api.acquisition.SetSignalReaderRequest.SourceFileMode\x12 \n\x18sample_rate_scale_factor\x18\x04 \x01(\x02\"(\n\x10SignalReaderType\x12\x08\n\x04HDF5\x10\x00\x12\n\n\x06\x44\x45VICE\x10\x01\";\n\x0eSourceFileMode\x12\x0f\n\x0bUNSPECIFIED\x10\x00\x12\x0e\n\nSINGLE_RUN\x10\x01\x12\x08\n\x04LOOP\x10\x02\"\x19\n\x17SetSignalReaderResponse*Y\n\rMinknowStatus\x12\x10\n\x0c\x45RROR_STATUS\x10\x00\x12\t\n\x05READY\x10\x01\x12\x0c\n\x08STARTING\x10\x02\x12\x0e\n\nPROCESSING\x10\x03\x12\r\n\tFINISHING\x10\x04**\n\x06Option\x12\x08\n\x04\x41UTO\x10\x00\x12\x0b\n\x07\x44ISABLE\x10\x01\x12\t\n\x05\x46ORCE\x10\x02*=\n\x07Purpose\x12\x11\n\rOTHER_PURPOSE\x10\x00\x12\x0e\n\nSEQUENCING\x10\x02\x12\x0f\n\x0b\x43\x41LIBRATION\x10\x03*{\n\x10\x41\x63quisitionState\x12\x18\n\x14\x41\x43QUISITION_STARTING\x10\x00\x12\x17\n\x13\x41\x43QUISITION_RUNNING\x10\x01\x12\x19\n\x15\x41\x43QUISITION_FINISHING\x10\x02\x12\x19\n\x15\x41\x43QUISITION_COMPLETED\x10\x03*\x80\x02\n\x15\x41\x63quisitionStopReason\x12\x13\n\x0fSTOPPED_NOT_SET\x10\x00\x12\x1a\n\x16STOPPED_USER_REQUESTED\x10\x01\x12\x19\n\x15STOPPED_NO_DISK_SPACE\x10\x02\x12&\n\"STOPPED_DEVICE_STOPPED_ACQUISITION\x10\x03\x12 \n\x1cSTOPPED_STARTING_ANOTHER_RUN\x10\x04\x12\x1a\n\x16STOPPED_PROTOCOL_ENDED\x10\x05\x12\x18\n\x14STOPPED_DEVICE_ERROR\x10\x06\x12\x1b\n\x17STOPPED_BAD_TEMPERATURE\x10\x07*\x8b\x01\n\x0e\x46inishingState\x12\x15\n\x11\x46INISHING_UNKNOWN\x10\x00\x12&\n\"FINISHING_PROCESSING_DEVICE_SIGNAL\x10\x01\x12\x1f\n\x1b\x46INISHING_BASECALLING_READS\x10\x02\x12\x19\n\x15\x46INISHING_SAVING_DATA\x10\x03\x32\xe3\t\n\x12\x41\x63quisitionService\x12X\n\x05start\x12%.minknow_api.acquisition.StartRequest\x1a&.minknow_api.acquisition.StartResponse\"\x00\x12U\n\x04stop\x12$.minknow_api.acquisition.StopRequest\x1a%.minknow_api.acquisition.StopResponse\"\x00\x12\x8f\x01\n\x17watch_for_status_change\x12\x34.minknow_api.acquisition.WatchForStatusChangeRequest\x1a\x35.minknow_api.acquisition.WatchForStatusChangeResponse\"\x03\x90\x02\x01(\x01\x30\x01\x12\x8f\x01\n\x1dwatch_current_acquisition_run\x12:.minknow_api.acquisition.WatchCurrentAcquisitionRunRequest\x1a+.minknow_api.acquisition.AcquisitionRunInfo\"\x03\x90\x02\x01\x30\x01\x12t\n\x0e\x63urrent_status\x12-.minknow_api.acquisition.CurrentStatusRequest\x1a..minknow_api.acquisition.CurrentStatusResponse\"\x03\x90\x02\x01\x12n\n\x0cget_progress\x12+.minknow_api.acquisition.GetProgressRequest\x1a,.minknow_api.acquisition.GetProgressResponse\"\x03\x90\x02\x01\x12\x7f\n\x14get_acquisition_info\x12\x35.minknow_api.acquisition.GetAcquisitionRunInfoRequest\x1a+.minknow_api.acquisition.AcquisitionRunInfo\"\x03\x90\x02\x01\x12\x87\x01\n\x15list_acquisition_runs\x12\x33.minknow_api.acquisition.ListAcquisitionRunsRequest\x1a\x34.minknow_api.acquisition.ListAcquisitionRunsResponse\"\x03\x90\x02\x01\x12\x89\x01\n\x1bget_current_acquisition_run\x12\x38.minknow_api.acquisition.GetCurrentAcquisitionRunRequest\x1a+.minknow_api.acquisition.AcquisitionRunInfo\"\x03\x90\x02\x01\x12{\n\x11set_signal_reader\x12/.minknow_api.acquisition.SetSignalReaderRequest\x1a\x30.minknow_api.acquisition.SetSignalReaderResponse\"\x03\x90\x02\x02\x42&\n\x1c\x63om.nanoporetech.minknow_api\xa2\x02\x05MKAPIb\x06proto3')
  ,
  dependencies=[minknow__api_dot_rpc__options__pb2.DESCRIPTOR,google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,])

_MINKNOWSTATUS = _descriptor.EnumDescriptor(
  name='MinknowStatus',
  full_name='minknow_api.acquisition.MinknowStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ERROR_STATUS', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='READY', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STARTING', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PROCESSING', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FINISHING', index=4, number=4,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4058,
  serialized_end=4147,
)
_sym_db.RegisterEnumDescriptor(_MINKNOWSTATUS)

MinknowStatus = enum_type_wrapper.EnumTypeWrapper(_MINKNOWSTATUS)
_OPTION = _descriptor.EnumDescriptor(
  name='Option',
  full_name='minknow_api.acquisition.Option',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='AUTO', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DISABLE', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FORCE', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4149,
  serialized_end=4191,
)
_sym_db.RegisterEnumDescriptor(_OPTION)

Option = enum_type_wrapper.EnumTypeWrapper(_OPTION)
_PURPOSE = _descriptor.EnumDescriptor(
  name='Purpose',
  full_name='minknow_api.acquisition.Purpose',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OTHER_PURPOSE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SEQUENCING', index=1, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CALIBRATION', index=2, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4193,
  serialized_end=4254,
)
_sym_db.RegisterEnumDescriptor(_PURPOSE)

Purpose = enum_type_wrapper.EnumTypeWrapper(_PURPOSE)
_ACQUISITIONSTATE = _descriptor.EnumDescriptor(
  name='AcquisitionState',
  full_name='minknow_api.acquisition.AcquisitionState',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACQUISITION_STARTING', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACQUISITION_RUNNING', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACQUISITION_FINISHING', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACQUISITION_COMPLETED', index=3, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4256,
  serialized_end=4379,
)
_sym_db.RegisterEnumDescriptor(_ACQUISITIONSTATE)

AcquisitionState = enum_type_wrapper.EnumTypeWrapper(_ACQUISITIONSTATE)
_ACQUISITIONSTOPREASON = _descriptor.EnumDescriptor(
  name='AcquisitionStopReason',
  full_name='minknow_api.acquisition.AcquisitionStopReason',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='STOPPED_NOT_SET', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STOPPED_USER_REQUESTED', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STOPPED_NO_DISK_SPACE', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STOPPED_DEVICE_STOPPED_ACQUISITION', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STOPPED_STARTING_ANOTHER_RUN', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STOPPED_PROTOCOL_ENDED', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STOPPED_DEVICE_ERROR', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STOPPED_BAD_TEMPERATURE', index=7, number=7,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4382,
  serialized_end=4638,
)
_sym_db.RegisterEnumDescriptor(_ACQUISITIONSTOPREASON)

AcquisitionStopReason = enum_type_wrapper.EnumTypeWrapper(_ACQUISITIONSTOPREASON)
_FINISHINGSTATE = _descriptor.EnumDescriptor(
  name='FinishingState',
  full_name='minknow_api.acquisition.FinishingState',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='FINISHING_UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FINISHING_PROCESSING_DEVICE_SIGNAL', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FINISHING_BASECALLING_READS', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FINISHING_SAVING_DATA', index=3, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4641,
  serialized_end=4780,
)
_sym_db.RegisterEnumDescriptor(_FINISHINGSTATE)

FinishingState = enum_type_wrapper.EnumTypeWrapper(_FINISHINGSTATE)
ERROR_STATUS = 0
READY = 1
STARTING = 2
PROCESSING = 3
FINISHING = 4
AUTO = 0
DISABLE = 1
FORCE = 2
OTHER_PURPOSE = 0
SEQUENCING = 2
CALIBRATION = 3
ACQUISITION_STARTING = 0
ACQUISITION_RUNNING = 1
ACQUISITION_FINISHING = 2
ACQUISITION_COMPLETED = 3
STOPPED_NOT_SET = 0
STOPPED_USER_REQUESTED = 1
STOPPED_NO_DISK_SPACE = 2
STOPPED_DEVICE_STOPPED_ACQUISITION = 3
STOPPED_STARTING_ANOTHER_RUN = 4
STOPPED_PROTOCOL_ENDED = 5
STOPPED_DEVICE_ERROR = 6
STOPPED_BAD_TEMPERATURE = 7
FINISHING_UNKNOWN = 0
FINISHING_PROCESSING_DEVICE_SIGNAL = 1
FINISHING_BASECALLING_READS = 2
FINISHING_SAVING_DATA = 3


_STOPREQUEST_DATAACTION = _descriptor.EnumDescriptor(
  name='DataAction',
  full_name='minknow_api.acquisition.StopRequest.DataAction',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='STOP_DEFAULT', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STOP_KEEP_ALL_DATA', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STOP_FINISH_PROCESSING', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=768,
  serialized_end=850,
)
_sym_db.RegisterEnumDescriptor(_STOPREQUEST_DATAACTION)

_SETSIGNALREADERREQUEST_SIGNALREADERTYPE = _descriptor.EnumDescriptor(
  name='SignalReaderType',
  full_name='minknow_api.acquisition.SetSignalReaderRequest.SignalReaderType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='HDF5', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DEVICE', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=3928,
  serialized_end=3968,
)
_sym_db.RegisterEnumDescriptor(_SETSIGNALREADERREQUEST_SIGNALREADERTYPE)

_SETSIGNALREADERREQUEST_SOURCEFILEMODE = _descriptor.EnumDescriptor(
  name='SourceFileMode',
  full_name='minknow_api.acquisition.SetSignalReaderRequest.SourceFileMode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNSPECIFIED', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SINGLE_RUN', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOOP', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=3970,
  serialized_end=4029,
)
_sym_db.RegisterEnumDescriptor(_SETSIGNALREADERREQUEST_SOURCEFILEMODE)


_STARTREQUEST = _descriptor.Descriptor(
  name='StartRequest',
  full_name='minknow_api.acquisition.StartRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dont_wait_for_device_ready', full_name='minknow_api.acquisition.StartRequest.dont_wait_for_device_ready', index=0,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='generate_report', full_name='minknow_api.acquisition.StartRequest.generate_report', index=1,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='send_sequencing_read_metrics', full_name='minknow_api.acquisition.StartRequest.send_sequencing_read_metrics', index=2,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='send_basecalling_metrics', full_name='minknow_api.acquisition.StartRequest.send_basecalling_metrics', index=3,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='purpose', full_name='minknow_api.acquisition.StartRequest.purpose', index=4,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='analysis', full_name='minknow_api.acquisition.StartRequest.analysis', index=5,
      number=7, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='file_output', full_name='minknow_api.acquisition.StartRequest.file_output', index=6,
      number=8, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='generate_final_summary', full_name='minknow_api.acquisition.StartRequest.generate_final_summary', index=7,
      number=9, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=123,
  serialized_end=590,
)


_STARTRESPONSE = _descriptor.Descriptor(
  name='StartResponse',
  full_name='minknow_api.acquisition.StartResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='run_id', full_name='minknow_api.acquisition.StartResponse.run_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=592,
  serialized_end=623,
)


_STOPREQUEST = _descriptor.Descriptor(
  name='StopRequest',
  full_name='minknow_api.acquisition.StopRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data_action_on_stop', full_name='minknow_api.acquisition.StopRequest.data_action_on_stop', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='wait_until_ready', full_name='minknow_api.acquisition.StopRequest.wait_until_ready', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='keep_power_on', full_name='minknow_api.acquisition.StopRequest.keep_power_on', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _STOPREQUEST_DATAACTION,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=626,
  serialized_end=850,
)


_STOPRESPONSE = _descriptor.Descriptor(
  name='StopResponse',
  full_name='minknow_api.acquisition.StopResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=852,
  serialized_end=866,
)


_WATCHFORSTATUSCHANGEREQUEST = _descriptor.Descriptor(
  name='WatchForStatusChangeRequest',
  full_name='minknow_api.acquisition.WatchForStatusChangeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='stop', full_name='minknow_api.acquisition.WatchForStatusChangeRequest.stop', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=868,
  serialized_end=911,
)


_WATCHFORSTATUSCHANGERESPONSE = _descriptor.Descriptor(
  name='WatchForStatusChangeResponse',
  full_name='minknow_api.acquisition.WatchForStatusChangeResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='minknow_api.acquisition.WatchForStatusChangeResponse.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=913,
  serialized_end=999,
)


_CURRENTSTATUSREQUEST = _descriptor.Descriptor(
  name='CurrentStatusRequest',
  full_name='minknow_api.acquisition.CurrentStatusRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1001,
  serialized_end=1023,
)


_CURRENTSTATUSRESPONSE = _descriptor.Descriptor(
  name='CurrentStatusResponse',
  full_name='minknow_api.acquisition.CurrentStatusResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='minknow_api.acquisition.CurrentStatusResponse.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1025,
  serialized_end=1104,
)


_GETPROGRESSREQUEST = _descriptor.Descriptor(
  name='GetProgressRequest',
  full_name='minknow_api.acquisition.GetProgressRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1106,
  serialized_end=1126,
)


_GETPROGRESSRESPONSE_RAWPERCHANNEL = _descriptor.Descriptor(
  name='RawPerChannel',
  full_name='minknow_api.acquisition.GetProgressResponse.RawPerChannel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='acquired', full_name='minknow_api.acquisition.GetProgressResponse.RawPerChannel.acquired', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='processed', full_name='minknow_api.acquisition.GetProgressResponse.RawPerChannel.processed', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1237,
  serialized_end=1289,
)

_GETPROGRESSRESPONSE = _descriptor.Descriptor(
  name='GetProgressResponse',
  full_name='minknow_api.acquisition.GetProgressResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='raw_per_channel', full_name='minknow_api.acquisition.GetProgressResponse.raw_per_channel', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_GETPROGRESSRESPONSE_RAWPERCHANNEL, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1129,
  serialized_end=1289,
)


_GETACQUISITIONRUNINFOREQUEST = _descriptor.Descriptor(
  name='GetAcquisitionRunInfoRequest',
  full_name='minknow_api.acquisition.GetAcquisitionRunInfoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='run_id', full_name='minknow_api.acquisition.GetAcquisitionRunInfoRequest.run_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1291,
  serialized_end=1337,
)


_ACQUISITIONYIELDSUMMARY = _descriptor.Descriptor(
  name='AcquisitionYieldSummary',
  full_name='minknow_api.acquisition.AcquisitionYieldSummary',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='read_count', full_name='minknow_api.acquisition.AcquisitionYieldSummary.read_count', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='basecalled_pass_read_count', full_name='minknow_api.acquisition.AcquisitionYieldSummary.basecalled_pass_read_count', index=1,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='basecalled_fail_read_count', full_name='minknow_api.acquisition.AcquisitionYieldSummary.basecalled_fail_read_count', index=2,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='basecalled_skipped_read_count', full_name='minknow_api.acquisition.AcquisitionYieldSummary.basecalled_skipped_read_count', index=3,
      number=10, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='basecalled_pass_bases', full_name='minknow_api.acquisition.AcquisitionYieldSummary.basecalled_pass_bases', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='basecalled_fail_bases', full_name='minknow_api.acquisition.AcquisitionYieldSummary.basecalled_fail_bases', index=5,
      number=18, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='basecalled_samples', full_name='minknow_api.acquisition.AcquisitionYieldSummary.basecalled_samples', index=6,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='selected_raw_samples', full_name='minknow_api.acquisition.AcquisitionYieldSummary.selected_raw_samples', index=7,
      number=7, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='selected_events', full_name='minknow_api.acquisition.AcquisitionYieldSummary.selected_events', index=8,
      number=8, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='estimated_selected_bases', full_name='minknow_api.acquisition.AcquisitionYieldSummary.estimated_selected_bases', index=9,
      number=9, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='alignment_matches', full_name='minknow_api.acquisition.AcquisitionYieldSummary.alignment_matches', index=10,
      number=14, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='alignment_mismatches', full_name='minknow_api.acquisition.AcquisitionYieldSummary.alignment_mismatches', index=11,
      number=15, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='alignment_insertions', full_name='minknow_api.acquisition.AcquisitionYieldSummary.alignment_insertions', index=12,
      number=16, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='alignment_deletions', full_name='minknow_api.acquisition.AcquisitionYieldSummary.alignment_deletions', index=13,
      number=17, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1340,
  serialized_end=1791,
)


_ACQUISITIONWRITERSUMMARY = _descriptor.Descriptor(
  name='AcquisitionWriterSummary',
  full_name='minknow_api.acquisition.AcquisitionWriterSummary',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='written_read_count', full_name='minknow_api.acquisition.AcquisitionWriterSummary.written_read_count', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bytes_to_write_produced', full_name='minknow_api.acquisition.AcquisitionWriterSummary.bytes_to_write_produced', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bytes_to_write_failed', full_name='minknow_api.acquisition.AcquisitionWriterSummary.bytes_to_write_failed', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bytes_to_write_completed', full_name='minknow_api.acquisition.AcquisitionWriterSummary.bytes_to_write_completed', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1794,
  serialized_end=1946,
)


_CHANNELSTATEINFO_STYLE = _descriptor.Descriptor(
  name='Style',
  full_name='minknow_api.acquisition.ChannelStateInfo.Style',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='label', full_name='minknow_api.acquisition.ChannelStateInfo.Style.label', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='description', full_name='minknow_api.acquisition.ChannelStateInfo.Style.description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='colour', full_name='minknow_api.acquisition.ChannelStateInfo.Style.colour', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2034,
  serialized_end=2093,
)

_CHANNELSTATEINFO_CHANNELSTATE = _descriptor.Descriptor(
  name='ChannelState',
  full_name='minknow_api.acquisition.ChannelStateInfo.ChannelState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='minknow_api.acquisition.ChannelStateInfo.ChannelState.id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='minknow_api.acquisition.ChannelStateInfo.ChannelState.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='style', full_name='minknow_api.acquisition.ChannelStateInfo.ChannelState.style', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='global_order', full_name='minknow_api.acquisition.ChannelStateInfo.ChannelState.global_order', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2095,
  serialized_end=2221,
)

_CHANNELSTATEINFO_GROUP = _descriptor.Descriptor(
  name='Group',
  full_name='minknow_api.acquisition.ChannelStateInfo.Group',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='minknow_api.acquisition.ChannelStateInfo.Group.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='style', full_name='minknow_api.acquisition.ChannelStateInfo.Group.style', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='states', full_name='minknow_api.acquisition.ChannelStateInfo.Group.states', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2224,
  serialized_end=2381,
)

_CHANNELSTATEINFO = _descriptor.Descriptor(
  name='ChannelStateInfo',
  full_name='minknow_api.acquisition.ChannelStateInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='groups', full_name='minknow_api.acquisition.ChannelStateInfo.groups', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_CHANNELSTATEINFO_STYLE, _CHANNELSTATEINFO_CHANNELSTATE, _CHANNELSTATEINFO_GROUP, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1949,
  serialized_end=2381,
)


_ACQUISITIONCONFIGSUMMARY = _descriptor.Descriptor(
  name='AcquisitionConfigSummary',
  full_name='minknow_api.acquisition.AcquisitionConfigSummary',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='basecalling_enabled', full_name='minknow_api.acquisition.AcquisitionConfigSummary.basecalling_enabled', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='barcoding_enabled', full_name='minknow_api.acquisition.AcquisitionConfigSummary.barcoding_enabled', index=1,
      number=13, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='alignment_enabled', full_name='minknow_api.acquisition.AcquisitionConfigSummary.alignment_enabled', index=2,
      number=14, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='lamp_enabled', full_name='minknow_api.acquisition.AcquisitionConfigSummary.lamp_enabled', index=3,
      number=15, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reads_directory', full_name='minknow_api.acquisition.AcquisitionConfigSummary.reads_directory', index=4,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reads_fallback_directories', full_name='minknow_api.acquisition.AcquisitionConfigSummary.reads_fallback_directories', index=5,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='fast5_reads_enabled', full_name='minknow_api.acquisition.AcquisitionConfigSummary.fast5_reads_enabled', index=6,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='fastq_reads_enabled', full_name='minknow_api.acquisition.AcquisitionConfigSummary.fastq_reads_enabled', index=7,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='protobuf_reads_enabled', full_name='minknow_api.acquisition.AcquisitionConfigSummary.protobuf_reads_enabled', index=8,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bulk_file_path', full_name='minknow_api.acquisition.AcquisitionConfigSummary.bulk_file_path', index=9,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bulk_file_enabled', full_name='minknow_api.acquisition.AcquisitionConfigSummary.bulk_file_enabled', index=10,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channel_state_info', full_name='minknow_api.acquisition.AcquisitionConfigSummary.channel_state_info', index=11,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='events_to_base_ratio', full_name='minknow_api.acquisition.AcquisitionConfigSummary.events_to_base_ratio', index=12,
      number=10, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sample_rate', full_name='minknow_api.acquisition.AcquisitionConfigSummary.sample_rate', index=13,
      number=11, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channel_count', full_name='minknow_api.acquisition.AcquisitionConfigSummary.channel_count', index=14,
      number=12, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2384,
  serialized_end=2862,
)


_ACQUISITIONRUNINFO = _descriptor.Descriptor(
  name='AcquisitionRunInfo',
  full_name='minknow_api.acquisition.AcquisitionRunInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='run_id', full_name='minknow_api.acquisition.AcquisitionRunInfo.run_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='state', full_name='minknow_api.acquisition.AcquisitionRunInfo.state', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='finishing_state', full_name='minknow_api.acquisition.AcquisitionRunInfo.finishing_state', index=2,
      number=10, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='stop_reason', full_name='minknow_api.acquisition.AcquisitionRunInfo.stop_reason', index=3,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start_time', full_name='minknow_api.acquisition.AcquisitionRunInfo.start_time', index=4,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data_read_start_time', full_name='minknow_api.acquisition.AcquisitionRunInfo.data_read_start_time', index=5,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data_read_end_time', full_name='minknow_api.acquisition.AcquisitionRunInfo.data_read_end_time', index=6,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='end_time', full_name='minknow_api.acquisition.AcquisitionRunInfo.end_time', index=7,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='yield_summary', full_name='minknow_api.acquisition.AcquisitionRunInfo.yield_summary', index=8,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='config_summary', full_name='minknow_api.acquisition.AcquisitionRunInfo.config_summary', index=9,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='writer_summary', full_name='minknow_api.acquisition.AcquisitionRunInfo.writer_summary', index=10,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2865,
  serialized_end=3525,
)


_LISTACQUISITIONRUNSREQUEST = _descriptor.Descriptor(
  name='ListAcquisitionRunsRequest',
  full_name='minknow_api.acquisition.ListAcquisitionRunsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3527,
  serialized_end=3555,
)


_LISTACQUISITIONRUNSRESPONSE = _descriptor.Descriptor(
  name='ListAcquisitionRunsResponse',
  full_name='minknow_api.acquisition.ListAcquisitionRunsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='run_ids', full_name='minknow_api.acquisition.ListAcquisitionRunsResponse.run_ids', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3557,
  serialized_end=3603,
)


_GETCURRENTACQUISITIONRUNREQUEST = _descriptor.Descriptor(
  name='GetCurrentAcquisitionRunRequest',
  full_name='minknow_api.acquisition.GetCurrentAcquisitionRunRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3605,
  serialized_end=3638,
)


_WATCHCURRENTACQUISITIONRUNREQUEST = _descriptor.Descriptor(
  name='WatchCurrentAcquisitionRunRequest',
  full_name='minknow_api.acquisition.WatchCurrentAcquisitionRunRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3640,
  serialized_end=3675,
)


_SETSIGNALREADERREQUEST = _descriptor.Descriptor(
  name='SetSignalReaderRequest',
  full_name='minknow_api.acquisition.SetSignalReaderRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reader', full_name='minknow_api.acquisition.SetSignalReaderRequest.reader', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\210\265\030\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hdf_source', full_name='minknow_api.acquisition.SetSignalReaderRequest.hdf_source', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hdf_mode', full_name='minknow_api.acquisition.SetSignalReaderRequest.hdf_mode', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sample_rate_scale_factor', full_name='minknow_api.acquisition.SetSignalReaderRequest.sample_rate_scale_factor', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SETSIGNALREADERREQUEST_SIGNALREADERTYPE,
    _SETSIGNALREADERREQUEST_SOURCEFILEMODE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3678,
  serialized_end=4029,
)


_SETSIGNALREADERRESPONSE = _descriptor.Descriptor(
  name='SetSignalReaderResponse',
  full_name='minknow_api.acquisition.SetSignalReaderResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4031,
  serialized_end=4056,
)

_STARTREQUEST.fields_by_name['generate_report'].enum_type = _OPTION
_STARTREQUEST.fields_by_name['send_sequencing_read_metrics'].enum_type = _OPTION
_STARTREQUEST.fields_by_name['send_basecalling_metrics'].enum_type = _OPTION
_STARTREQUEST.fields_by_name['purpose'].enum_type = _PURPOSE
_STARTREQUEST.fields_by_name['analysis'].enum_type = _OPTION
_STARTREQUEST.fields_by_name['file_output'].enum_type = _OPTION
_STARTREQUEST.fields_by_name['generate_final_summary'].enum_type = _OPTION
_STOPREQUEST.fields_by_name['data_action_on_stop'].enum_type = _STOPREQUEST_DATAACTION
_STOPREQUEST_DATAACTION.containing_type = _STOPREQUEST
_WATCHFORSTATUSCHANGERESPONSE.fields_by_name['status'].enum_type = _MINKNOWSTATUS
_CURRENTSTATUSRESPONSE.fields_by_name['status'].enum_type = _MINKNOWSTATUS
_GETPROGRESSRESPONSE_RAWPERCHANNEL.containing_type = _GETPROGRESSRESPONSE
_GETPROGRESSRESPONSE.fields_by_name['raw_per_channel'].message_type = _GETPROGRESSRESPONSE_RAWPERCHANNEL
_CHANNELSTATEINFO_STYLE.containing_type = _CHANNELSTATEINFO
_CHANNELSTATEINFO_CHANNELSTATE.fields_by_name['style'].message_type = _CHANNELSTATEINFO_STYLE
_CHANNELSTATEINFO_CHANNELSTATE.containing_type = _CHANNELSTATEINFO
_CHANNELSTATEINFO_GROUP.fields_by_name['style'].message_type = _CHANNELSTATEINFO_STYLE
_CHANNELSTATEINFO_GROUP.fields_by_name['states'].message_type = _CHANNELSTATEINFO_CHANNELSTATE
_CHANNELSTATEINFO_GROUP.containing_type = _CHANNELSTATEINFO
_CHANNELSTATEINFO.fields_by_name['groups'].message_type = _CHANNELSTATEINFO_GROUP
_ACQUISITIONCONFIGSUMMARY.fields_by_name['channel_state_info'].message_type = _CHANNELSTATEINFO
_ACQUISITIONRUNINFO.fields_by_name['state'].enum_type = _ACQUISITIONSTATE
_ACQUISITIONRUNINFO.fields_by_name['finishing_state'].enum_type = _FINISHINGSTATE
_ACQUISITIONRUNINFO.fields_by_name['stop_reason'].enum_type = _ACQUISITIONSTOPREASON
_ACQUISITIONRUNINFO.fields_by_name['start_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_ACQUISITIONRUNINFO.fields_by_name['data_read_start_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_ACQUISITIONRUNINFO.fields_by_name['data_read_end_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_ACQUISITIONRUNINFO.fields_by_name['end_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_ACQUISITIONRUNINFO.fields_by_name['yield_summary'].message_type = _ACQUISITIONYIELDSUMMARY
_ACQUISITIONRUNINFO.fields_by_name['config_summary'].message_type = _ACQUISITIONCONFIGSUMMARY
_ACQUISITIONRUNINFO.fields_by_name['writer_summary'].message_type = _ACQUISITIONWRITERSUMMARY
_SETSIGNALREADERREQUEST.fields_by_name['reader'].enum_type = _SETSIGNALREADERREQUEST_SIGNALREADERTYPE
_SETSIGNALREADERREQUEST.fields_by_name['hdf_mode'].enum_type = _SETSIGNALREADERREQUEST_SOURCEFILEMODE
_SETSIGNALREADERREQUEST_SIGNALREADERTYPE.containing_type = _SETSIGNALREADERREQUEST
_SETSIGNALREADERREQUEST_SOURCEFILEMODE.containing_type = _SETSIGNALREADERREQUEST
DESCRIPTOR.message_types_by_name['StartRequest'] = _STARTREQUEST
DESCRIPTOR.message_types_by_name['StartResponse'] = _STARTRESPONSE
DESCRIPTOR.message_types_by_name['StopRequest'] = _STOPREQUEST
DESCRIPTOR.message_types_by_name['StopResponse'] = _STOPRESPONSE
DESCRIPTOR.message_types_by_name['WatchForStatusChangeRequest'] = _WATCHFORSTATUSCHANGEREQUEST
DESCRIPTOR.message_types_by_name['WatchForStatusChangeResponse'] = _WATCHFORSTATUSCHANGERESPONSE
DESCRIPTOR.message_types_by_name['CurrentStatusRequest'] = _CURRENTSTATUSREQUEST
DESCRIPTOR.message_types_by_name['CurrentStatusResponse'] = _CURRENTSTATUSRESPONSE
DESCRIPTOR.message_types_by_name['GetProgressRequest'] = _GETPROGRESSREQUEST
DESCRIPTOR.message_types_by_name['GetProgressResponse'] = _GETPROGRESSRESPONSE
DESCRIPTOR.message_types_by_name['GetAcquisitionRunInfoRequest'] = _GETACQUISITIONRUNINFOREQUEST
DESCRIPTOR.message_types_by_name['AcquisitionYieldSummary'] = _ACQUISITIONYIELDSUMMARY
DESCRIPTOR.message_types_by_name['AcquisitionWriterSummary'] = _ACQUISITIONWRITERSUMMARY
DESCRIPTOR.message_types_by_name['ChannelStateInfo'] = _CHANNELSTATEINFO
DESCRIPTOR.message_types_by_name['AcquisitionConfigSummary'] = _ACQUISITIONCONFIGSUMMARY
DESCRIPTOR.message_types_by_name['AcquisitionRunInfo'] = _ACQUISITIONRUNINFO
DESCRIPTOR.message_types_by_name['ListAcquisitionRunsRequest'] = _LISTACQUISITIONRUNSREQUEST
DESCRIPTOR.message_types_by_name['ListAcquisitionRunsResponse'] = _LISTACQUISITIONRUNSRESPONSE
DESCRIPTOR.message_types_by_name['GetCurrentAcquisitionRunRequest'] = _GETCURRENTACQUISITIONRUNREQUEST
DESCRIPTOR.message_types_by_name['WatchCurrentAcquisitionRunRequest'] = _WATCHCURRENTACQUISITIONRUNREQUEST
DESCRIPTOR.message_types_by_name['SetSignalReaderRequest'] = _SETSIGNALREADERREQUEST
DESCRIPTOR.message_types_by_name['SetSignalReaderResponse'] = _SETSIGNALREADERRESPONSE
DESCRIPTOR.enum_types_by_name['MinknowStatus'] = _MINKNOWSTATUS
DESCRIPTOR.enum_types_by_name['Option'] = _OPTION
DESCRIPTOR.enum_types_by_name['Purpose'] = _PURPOSE
DESCRIPTOR.enum_types_by_name['AcquisitionState'] = _ACQUISITIONSTATE
DESCRIPTOR.enum_types_by_name['AcquisitionStopReason'] = _ACQUISITIONSTOPREASON
DESCRIPTOR.enum_types_by_name['FinishingState'] = _FINISHINGSTATE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

StartRequest = _reflection.GeneratedProtocolMessageType('StartRequest', (_message.Message,), {
  'DESCRIPTOR' : _STARTREQUEST,
  '__module__' : 'minknow_api.acquisition_pb2'
  ,
  '__doc__': """Attributes:
      dont_wait_for_device_ready:
          Prevent waiting until the device is ready before starting
          acquisition.  Defaults to false.  By default, MinKNOW will
          block in the start() call for the device and flow cell to be
          ready for acquisition (which may take several seconds after
          plugging in the flow cell on some devices). Setting this
          option will cause the call to return with an error if the
          device is not already prepared to acquire data.  Since 1.14
      generate_report:
          Generate duty time and throughput reports.  Note that this
          setting will be ignored (and no reports will be generated) if
          no protocol is running at the time acquisition is started.
          The default setting (AUTO) will only generate reports if
          purpose is set to SEQUENCING.  Since 3.0
      send_sequencing_read_metrics:
          Whether sequencing read metrics should be reported to Oxford
          Nanopore.  These are performance metrics that are used to
          improve the sequencing technology. They do not include any
          actual sequencing data, only statistics about read lengths,
          duty time and similar generic performance information.  The
          default setting (AUTO) will only send metrics if purpose is
          set to SEQUENCING.  Since 3.0
      send_basecalling_metrics:
          Whether basecalling metrics should be reported to Oxford
          Nanopore.  These are performance metrics that are used to
          improve the sequencing technology. They do not include any
          actual sequencing data, only statistics about basecalling
          performance.  The default setting (AUTO) will only send
          metrics if purpose is set to SEQUENCING.  NB: this setting is
          ignored if live basecalling is not enabled, since there will
          be no metrics to send.  Since 3.2
      purpose:
          Specify the purpose of this acquisition period.  This affects
          various defaults (see the Purpose enum documentation for more
          details). It may also affect how the user interface presents
          the state of the protocol.  Since 3.2
      analysis:
          Perform analysis for this acquisition period.  If this is
          disabled, no reads, no events, no channel states and no
          basecalls will be generated. Any RPCs that depend on any of
          these will fail. No reads-based files will be produced at all,
          regardless of any other settings.  This is mostly useful for
          calibration (although you should normally use the purpose
          field rather than setting this explicitly).  The default
          setting (AUTO) will use the persistent setting from the
          analysis_configuraiton service, unless the purpose is set to
          CALIBRATION.  Since 3.2
      file_output:
          Allow file output for this acquisition period.  If this is
          disabled, the file output settings will be ignored for this
          acquisition period, and no data files will be produced. Note
          that reports are NOT managed by this setting.  Note that
          setting this to FORCE will simply make file output respect the
          bulk and read writer configurations. If each file output type
          is disabled, you will still get no file output.  This is
          mostly useful for calibration (although you should normally
          use the purpose field rather than setting this explicitly).
          The default setting (AUTO) will only suppress file output if
          purpose is set to CALIBRATION.  Since 3.2
      generate_final_summary:
          Write a final_summary.txt file.  If file_output is disabled,
          the final_summary.txt file will not be written regardless of
          this setting.  The default setting (AUTO) will only enable
          writing a final_summary.txt file if the purpose is set to
          SEQUENCING.  Since 3.5 (NB: in 3.3 and 3.4, final_summary.txt
          was always written out if file_output was enabled).
  """,
  # @@protoc_insertion_point(class_scope:minknow_api.acquisition.StartRequest)
  })
_sym_db.RegisterMessage(StartRequest)

StartResponse = _reflection.GeneratedProtocolMessageType('StartResponse', (_message.Message,), {
  'DESCRIPTOR' : _STARTRESPONSE,
  '__module__' : 'minknow_api.acquisition_pb2'
  ,
  '__doc__': """Attributes:
      run_id:
          Globally-unique identifier generated when the acquisition is
          started.  This is guaranteed to unique, including aross
          sequencing devices.
  """,
  # @@protoc_insertion_point(class_scope:minknow_api.acquisition.StartResponse)
  })
_sym_db.RegisterMessage(StartResponse)

StopRequest = _reflection.GeneratedProtocolMessageType('StopRequest', (_message.Message,), {
  'DESCRIPTOR' : _STOPREQUEST,
  '__module__' : 'minknow_api.acquisition_pb2'
  ,
  '__doc__': """Attributes:
      wait_until_ready:
          Defaults to false If false will return as soon as minknow
          enters the FINISHING state. If true then returns as soon as
          minknow enters the READY state.
      keep_power_on:
          Keep the ASIC power on for GridIONs and MinIONs.  Unless this
          option is set to true, the ASIC power will be disabled as soon
          as MinKNOW has stopped pulling data from it. This is because
          removing (or plugging in) a flow cell while the power is on
          can damage it. Disabling the power will also disable the
          heating element; this is likely to cause the device to cool
          down (particularly for MinIONs).  You should normally only use
          this option if you are expecting to start acquisition again in
          a short amount of time.  This option has no effect on
          PromethIONs.  Since 1.15.2
  """,
  # @@protoc_insertion_point(class_scope:minknow_api.acquisition.StopRequest)
  })
_sym_db.RegisterMessage(StopRequest)

StopResponse = _reflection.GeneratedProtocolMessageType('StopResponse', (_message.Message,), {
  'DESCRIPTOR' : _STOPRESPONSE,
  '__module__' : 'minknow_api.acquisition_pb2'
  # @@protoc_insertion_point(class_scope:minknow_api.acquisition.StopResponse)
  })
_sym_db.RegisterMessage(StopResponse)

WatchForStatusChangeRequest = _reflection.GeneratedProtocolMessageType('WatchForStatusChangeRequest', (_message.Message,), {
  'DESCRIPTOR' : _WATCHFORSTATUSCHANGEREQUEST,
  '__module__' : 'minknow_api.acquisition_pb2'
  # @@protoc_insertion_point(class_scope:minknow_api.acquisition.WatchForStatusChangeRequest)
  })
_sym_db.RegisterMessage(WatchForStatusChangeRequest)

WatchForStatusChangeResponse = _reflection.GeneratedProtocolMessageType('WatchForStatusChangeResponse', (_message.Message,), {
  'DESCRIPTOR' : _WATCHFORSTATUSCHANGERESPONSE,
  '__module__' : 'minknow_api.acquisition_pb2'
  # @@protoc_insertion_point(class_scope:minknow_api.acquisition.WatchForStatusChangeResponse)
  })
_sym_db.RegisterMessage(WatchForStatusChangeResponse)

CurrentStatusRequest = _reflection.GeneratedProtocolMessageType('CurrentStatusRequest', (_message.Message,), {
  'DESCRIPTOR' : _CURRENTSTATUSREQUEST,
  '__module__' : 'minknow_api.acquisition_pb2'
  # @@protoc_insertion_point(class_scope:minknow_api.acquisition.CurrentStatusRequest)
  })
_sym_db.RegisterMessage(CurrentStatusRequest)

CurrentStatusResponse = _reflection.GeneratedProtocolMessageType('CurrentStatusResponse', (_message.Message,), {
  'DESCRIPTOR' : _CURRENTSTATUSRESPONSE,
  '__module__' : 'minknow_api.acquisition_pb2'
  # @@protoc_insertion_point(class_scope:minknow_api.acquisition.CurrentStatusResponse)
  })
_sym_db.RegisterMessage(CurrentStatusResponse)

GetProgressRequest = _reflection.GeneratedProtocolMessageType('GetProgressRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETPROGRESSREQUEST,
  '__module__' : 'minknow_api.acquisition_pb2'
  # @@protoc_insertion_point(class_scope:minknow_api.acquisition.GetProgressRequest)
  })
_sym_db.RegisterMessage(GetProgressRequest)

GetProgressResponse = _reflection.GeneratedProtocolMessageType('GetProgressResponse', (_message.Message,), {

  'RawPerChannel' : _reflection.GeneratedProtocolMessageType('RawPerChannel', (_message.Message,), {
    'DESCRIPTOR' : _GETPROGRESSRESPONSE_RAWPERCHANNEL,
    '__module__' : 'minknow_api.acquisition_pb2'
    ,
    '__doc__': """Attributes:
        acquired:
            Number of samples (per channel) acquired from the device.
        processed:
            Number of samples (per channel) passed to the analysis
            pipeline for processing.  This can be compared to acquired to
            see how far behind the analysis is lagging.
    """,
    # @@protoc_insertion_point(class_scope:minknow_api.acquisition.GetProgressResponse.RawPerChannel)
    })
  ,
  'DESCRIPTOR' : _GETPROGRESSRESPONSE,
  '__module__' : 'minknow_api.acquisition_pb2'
  ,
  '__doc__': """Attributes:
      raw_per_channel:
          The amount of raw data (per channel) that has been acquired
          and processed.
  """,
  # @@protoc_insertion_point(class_scope:minknow_api.acquisition.GetProgressResponse)
  })
_sym_db.RegisterMessage(GetProgressResponse)
_sym_db.RegisterMessage(GetProgressResponse.RawPerChannel)

GetAcquisitionRunInfoRequest = _reflection.GeneratedProtocolMessageType('GetAcquisitionRunInfoRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETACQUISITIONRUNINFOREQUEST,
  '__module__' : 'minknow_api.acquisition_pb2'
  ,
  '__doc__': """Attributes:
      run_id:
          The acquisition period to get information about.
  """,
  # @@protoc_insertion_point(class_scope:minknow_api.acquisition.GetAcquisitionRunInfoRequest)
  })
_sym_db.RegisterMessage(GetAcquisitionRunInfoRequest)

AcquisitionYieldSummary = _reflection.GeneratedProtocolMessageType('AcquisitionYieldSummary', (_message.Message,), {
  'DESCRIPTOR' : _ACQUISITIONYIELDSUMMARY,
  '__module__' : 'minknow_api.acquisition_pb2'
  ,
  '__doc__': """Attributes:
      read_count:
          Number of reads selected by analysis as good reads.  The reads
          in this counter are completed, but not necessarily on disk
          yet.
      basecalled_pass_read_count:
          Number of reads successfully basecalled.
      basecalled_fail_read_count:
          Number of reads which have failed to basecall.
      basecalled_skipped_read_count:
          Number of reads which have been skipped
      basecalled_pass_bases:
          Number of bases which have been called and classed as pass.
      basecalled_fail_bases:
          Number of bases which have been called and were classed as
          fail.
      basecalled_samples:
          Number of raw samples which have been called.
      selected_raw_samples:
          Number of minknow raw samples which have been selected for
          writing to disk as reads.
      selected_events:
          Number of minknow events which have been selected for writing
          to disk as reads.
      estimated_selected_bases:
          Estimated number of bases MinKNOW has selected for writing.
          This is estimated based on already called bases and samples.
      alignment_matches:
          Number of bases which have matched target reference.  Only
          specified when running live alignment.  Since 4.0
      alignment_mismatches:
          Number of bases which have not matched target reference.  Only
          specified when running live alignment.  Since 4.0
      alignment_insertions:
          Number of bases which were inserted into alignments that
          matched the reference.  Only specified when running live
          alignment.  Since 4.0
      alignment_deletions:
          Number of bases which were deleted from alignments that
          matched the reference.  Only specified when running live
          alignment.  Since 4.0
  """,
  # @@protoc_insertion_point(class_scope:minknow_api.acquisition.AcquisitionYieldSummary)
  })
_sym_db.RegisterMessage(AcquisitionYieldSummary)

AcquisitionWriterSummary = _reflection.GeneratedProtocolMessageType('AcquisitionWriterSummary', (_message.Message,), {
  'DESCRIPTOR' : _ACQUISITIONWRITERSUMMARY,
  '__module__' : 'minknow_api.acquisition_pb2'
  ,
  '__doc__': """Attributes:
      written_read_count:
          Number of reads finished processing and written to disk.  The
          reads which have been finalised and written to disk.
      bytes_to_write_produced:
          Number of bytes which minknow needs to write in order to
          finish the experiment.
      bytes_to_write_failed:
          Number of bytes which minknow has failed to write to final
          location. These reads are instead contained in the
          fallback/tmp locations.
      bytes_to_write_completed:
          Number of bytes which minknow has written to final location.
  """,
  # @@protoc_insertion_point(class_scope:minknow_api.acquisition.AcquisitionWriterSummary)
  })
_sym_db.RegisterMessage(AcquisitionWriterSummary)

ChannelStateInfo = _reflection.GeneratedProtocolMessageType('ChannelStateInfo', (_message.Message,), {

  'Style' : _reflection.GeneratedProtocolMessageType('Style', (_message.Message,), {
    'DESCRIPTOR' : _CHANNELSTATEINFO_STYLE,
    '__module__' : 'minknow_api.acquisition_pb2'
    ,
    '__doc__': """Attributes:
        label:
            The human-readable name to display when rendering this channel
            state or group.
        description:
            A sentence describing the meaning of the channel state or
            group.  This can be used as a tooltip, for example.
        colour:
            The colour to use when rendering this channel state or group.
            This is a six-digit hex string describing an RGB colour (eg:
            "ff00ff" for purple).
    """,
    # @@protoc_insertion_point(class_scope:minknow_api.acquisition.ChannelStateInfo.Style)
    })
  ,

  'ChannelState' : _reflection.GeneratedProtocolMessageType('ChannelState', (_message.Message,), {
    'DESCRIPTOR' : _CHANNELSTATEINFO_CHANNELSTATE,
    '__module__' : 'minknow_api.acquisition_pb2'
    ,
    '__doc__': """Attributes:
        id:
            The numeric identifier of the state.  This is what is reported
            in any other APIs that return a channel state ID.
        name:
            The internal name of the state.  This is what is reported in
            any other APIs that return a channel state name.
        style:
            How to render the channel state in a graphical user interface.
            Note that the style may be missing from some channel states
            (such as the ones that are built in to MinKNOW).
        global_order:
            An order ranking for the channel states when they are
            ungrouped.  This can be used to order the channel states after
            merging the groups.
    """,
    # @@protoc_insertion_point(class_scope:minknow_api.acquisition.ChannelStateInfo.ChannelState)
    })
  ,

  'Group' : _reflection.GeneratedProtocolMessageType('Group', (_message.Message,), {
    'DESCRIPTOR' : _CHANNELSTATEINFO_GROUP,
    '__module__' : 'minknow_api.acquisition_pb2'
    ,
    '__doc__': """Attributes:
        name:
            The name of the group.
        style:
            How to render the group in a graphical user interface.  Note
            that the style may be missing from some groups (such as the
            ones that are built in to MinKNOW).
        states:
            The channel states contained in the group.  The groups are
            ordered according to the "order" attribute of the channel
            state style in the channel states configuration.
    """,
    # @@protoc_insertion_point(class_scope:minknow_api.acquisition.ChannelStateInfo.Group)
    })
  ,
  'DESCRIPTOR' : _CHANNELSTATEINFO,
  '__module__' : 'minknow_api.acquisition_pb2'
  ,
  '__doc__': """Attributes:
      groups:
          The groups of channel states.  The groups are ordered
          according to the "order" attribute of the group style in the
          channel states configuration.
  """,
  # @@protoc_insertion_point(class_scope:minknow_api.acquisition.ChannelStateInfo)
  })
_sym_db.RegisterMessage(ChannelStateInfo)
_sym_db.RegisterMessage(ChannelStateInfo.Style)
_sym_db.RegisterMessage(ChannelStateInfo.ChannelState)
_sym_db.RegisterMessage(ChannelStateInfo.Group)

AcquisitionConfigSummary = _reflection.GeneratedProtocolMessageType('AcquisitionConfigSummary', (_message.Message,), {
  'DESCRIPTOR' : _ACQUISITIONCONFIGSUMMARY,
  '__module__' : 'minknow_api.acquisition_pb2'
  ,
  '__doc__': """Attributes:
      basecalling_enabled:
          Was basecalling enabled for the run.
      barcoding_enabled:
          Is barcoding enabled for the run
      alignment_enabled:
          Is alignment enabled for the run
      lamp_enabled:
          Is lamp enabled for the run
      reads_directory:
          Root directory reads were written to for the run.  Empty if no
          reads were enabled.
      reads_fallback_directories:
          Directories reads are written to if the reads_directory is on
          the network and writes to it fail.  Empty if no reads were
          enabled.
      fast5_reads_enabled:
          Determine if fast5 reads were enabled for the run.
      fastq_reads_enabled:
          Determine if fastq reads were enabled for the run.
      protobuf_reads_enabled:
          Determine if protobuf reads were enabled for the run.
      bulk_file_path:
          The path of the bulk file for the run.  Empty if no reads were
          enabled.
      bulk_file_enabled:
          Find if the bulk writer was enabled for a run.
      channel_state_info:
          Channel state styling information
      events_to_base_ratio:
          Number of bases per event
      sample_rate:
          Sample rate for the acquisition.  Since 3.3
      channel_count:
          Channel count used in the acquisition.  Since 3.3
  """,
  # @@protoc_insertion_point(class_scope:minknow_api.acquisition.AcquisitionConfigSummary)
  })
_sym_db.RegisterMessage(AcquisitionConfigSummary)

AcquisitionRunInfo = _reflection.GeneratedProtocolMessageType('AcquisitionRunInfo', (_message.Message,), {
  'DESCRIPTOR' : _ACQUISITIONRUNINFO,
  '__module__' : 'minknow_api.acquisition_pb2'
  ,
  '__doc__': """Attributes:
      run_id:
          The unique identifier assigned to this acquisition run.  This
          is guaranteed to be made of ASCII characters, and at most 40
          characters. It is globally unique across all acquisitions on
          all MinKNOW instances.
      state:
          Indicates the current state of the acquisition.
      finishing_state:
          If the experiment is finishing, an extra piece of state
          describing the current finishing state.
      stop_reason:
          The reason the acquisition period was ended.
      start_time:
          When the acquisition period was started (UTC).
      data_read_start_time:
          When MinKNOW began acquiring data (UTC).  Unset if the
          acquisition is still starting up.
      data_read_end_time:
          When the MinKNOW stopped acquiring data (UTC).  Unset if the
          acquisition is still acquiring.
      end_time:
          When the acquisition terminated (UTC).  Unset if the
          acquisition period is still running.
      yield_summary:
          Summary of acquisition yields.  Since 1.12
      config_summary:
          Summary of the configuration settings for a run.  Since 1.14
      writer_summary:
          Summary of writer yields.  Since 4.0
  """,
  # @@protoc_insertion_point(class_scope:minknow_api.acquisition.AcquisitionRunInfo)
  })
_sym_db.RegisterMessage(AcquisitionRunInfo)

ListAcquisitionRunsRequest = _reflection.GeneratedProtocolMessageType('ListAcquisitionRunsRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTACQUISITIONRUNSREQUEST,
  '__module__' : 'minknow_api.acquisition_pb2'
  # @@protoc_insertion_point(class_scope:minknow_api.acquisition.ListAcquisitionRunsRequest)
  })
_sym_db.RegisterMessage(ListAcquisitionRunsRequest)

ListAcquisitionRunsResponse = _reflection.GeneratedProtocolMessageType('ListAcquisitionRunsResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTACQUISITIONRUNSRESPONSE,
  '__module__' : 'minknow_api.acquisition_pb2'
  # @@protoc_insertion_point(class_scope:minknow_api.acquisition.ListAcquisitionRunsResponse)
  })
_sym_db.RegisterMessage(ListAcquisitionRunsResponse)

GetCurrentAcquisitionRunRequest = _reflection.GeneratedProtocolMessageType('GetCurrentAcquisitionRunRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETCURRENTACQUISITIONRUNREQUEST,
  '__module__' : 'minknow_api.acquisition_pb2'
  # @@protoc_insertion_point(class_scope:minknow_api.acquisition.GetCurrentAcquisitionRunRequest)
  })
_sym_db.RegisterMessage(GetCurrentAcquisitionRunRequest)

WatchCurrentAcquisitionRunRequest = _reflection.GeneratedProtocolMessageType('WatchCurrentAcquisitionRunRequest', (_message.Message,), {
  'DESCRIPTOR' : _WATCHCURRENTACQUISITIONRUNREQUEST,
  '__module__' : 'minknow_api.acquisition_pb2'
  # @@protoc_insertion_point(class_scope:minknow_api.acquisition.WatchCurrentAcquisitionRunRequest)
  })
_sym_db.RegisterMessage(WatchCurrentAcquisitionRunRequest)

SetSignalReaderRequest = _reflection.GeneratedProtocolMessageType('SetSignalReaderRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETSIGNALREADERREQUEST,
  '__module__' : 'minknow_api.acquisition_pb2'
  ,
  '__doc__': """Attributes:
      reader:
          The type of signal reader to use
      hdf_source:
          The following settings are optional, and only used when
          setting the reader to hdf5
      hdf_mode:
           Defaults to UNSPECIFIED, since this setting is optional
  """,
  # @@protoc_insertion_point(class_scope:minknow_api.acquisition.SetSignalReaderRequest)
  })
_sym_db.RegisterMessage(SetSignalReaderRequest)

SetSignalReaderResponse = _reflection.GeneratedProtocolMessageType('SetSignalReaderResponse', (_message.Message,), {
  'DESCRIPTOR' : _SETSIGNALREADERRESPONSE,
  '__module__' : 'minknow_api.acquisition_pb2'
  # @@protoc_insertion_point(class_scope:minknow_api.acquisition.SetSignalReaderResponse)
  })
_sym_db.RegisterMessage(SetSignalReaderResponse)


DESCRIPTOR._options = None
_SETSIGNALREADERREQUEST.fields_by_name['reader']._options = None

_ACQUISITIONSERVICE = _descriptor.ServiceDescriptor(
  name='AcquisitionService',
  full_name='minknow_api.acquisition.AcquisitionService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=4783,
  serialized_end=6034,
  methods=[
  _descriptor.MethodDescriptor(
    name='start',
    full_name='minknow_api.acquisition.AcquisitionService.start',
    index=0,
    containing_service=None,
    input_type=_STARTREQUEST,
    output_type=_STARTRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='stop',
    full_name='minknow_api.acquisition.AcquisitionService.stop',
    index=1,
    containing_service=None,
    input_type=_STOPREQUEST,
    output_type=_STOPRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='watch_for_status_change',
    full_name='minknow_api.acquisition.AcquisitionService.watch_for_status_change',
    index=2,
    containing_service=None,
    input_type=_WATCHFORSTATUSCHANGEREQUEST,
    output_type=_WATCHFORSTATUSCHANGERESPONSE,
    serialized_options=_b('\220\002\001'),
  ),
  _descriptor.MethodDescriptor(
    name='watch_current_acquisition_run',
    full_name='minknow_api.acquisition.AcquisitionService.watch_current_acquisition_run',
    index=3,
    containing_service=None,
    input_type=_WATCHCURRENTACQUISITIONRUNREQUEST,
    output_type=_ACQUISITIONRUNINFO,
    serialized_options=_b('\220\002\001'),
  ),
  _descriptor.MethodDescriptor(
    name='current_status',
    full_name='minknow_api.acquisition.AcquisitionService.current_status',
    index=4,
    containing_service=None,
    input_type=_CURRENTSTATUSREQUEST,
    output_type=_CURRENTSTATUSRESPONSE,
    serialized_options=_b('\220\002\001'),
  ),
  _descriptor.MethodDescriptor(
    name='get_progress',
    full_name='minknow_api.acquisition.AcquisitionService.get_progress',
    index=5,
    containing_service=None,
    input_type=_GETPROGRESSREQUEST,
    output_type=_GETPROGRESSRESPONSE,
    serialized_options=_b('\220\002\001'),
  ),
  _descriptor.MethodDescriptor(
    name='get_acquisition_info',
    full_name='minknow_api.acquisition.AcquisitionService.get_acquisition_info',
    index=6,
    containing_service=None,
    input_type=_GETACQUISITIONRUNINFOREQUEST,
    output_type=_ACQUISITIONRUNINFO,
    serialized_options=_b('\220\002\001'),
  ),
  _descriptor.MethodDescriptor(
    name='list_acquisition_runs',
    full_name='minknow_api.acquisition.AcquisitionService.list_acquisition_runs',
    index=7,
    containing_service=None,
    input_type=_LISTACQUISITIONRUNSREQUEST,
    output_type=_LISTACQUISITIONRUNSRESPONSE,
    serialized_options=_b('\220\002\001'),
  ),
  _descriptor.MethodDescriptor(
    name='get_current_acquisition_run',
    full_name='minknow_api.acquisition.AcquisitionService.get_current_acquisition_run',
    index=8,
    containing_service=None,
    input_type=_GETCURRENTACQUISITIONRUNREQUEST,
    output_type=_ACQUISITIONRUNINFO,
    serialized_options=_b('\220\002\001'),
  ),
  _descriptor.MethodDescriptor(
    name='set_signal_reader',
    full_name='minknow_api.acquisition.AcquisitionService.set_signal_reader',
    index=9,
    containing_service=None,
    input_type=_SETSIGNALREADERREQUEST,
    output_type=_SETSIGNALREADERRESPONSE,
    serialized_options=_b('\220\002\002'),
  ),
])
_sym_db.RegisterServiceDescriptor(_ACQUISITIONSERVICE)

DESCRIPTOR.services_by_name['AcquisitionService'] = _ACQUISITIONSERVICE

# @@protoc_insertion_point(module_scope)
